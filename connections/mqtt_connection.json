{   
    "name": "MQTT Connection",
    "connectionType": "mqtt",
    "connectionStatus": "open",
    "failoverEnabled" : true,
    "uri": "tcp://hivemq:1883",
    "sources": [{
        "addresses": ["subsystems/org.eclipse.ditto:water-level-subsystem/#"],
        "authorizationContext": ["connection:hivemq-mqtt"],
        "qos": 1,
        "enforcement": {
            "input": "{{ source:address }}",
            "filters": [
                "subsystems/{{ thing:id }}"
            ]
        }
    }],
    "targets": [{
        "address": "subsystems/{{ thing:id }}/downlink",
        "topics" : [
            "_/_/things/twin/events",
            "_/_/things/live/messages"
        ],
        "authorizationContext": ["connection:hivemq-mqtt"],
        "qos": 1
    }],
    "mappingContext": {
        "mappingEngine": "JavaScript",
        "options": {
            "incomingScript": "function mapToDittoProtocolMsg(headers, textPayload, bytePayload, contentType) { if (contentType !== 'application/json') { return null;} const jsonString = String.fromCharCode.apply(null, new Uint8Array(bytePayload)); const jsonData = JSON.parse(jsonString); const thingId = jsonData.thingId.split(':'); return Ditto.buildDittoProtocolMsg(thingId[0], thingId[1], 'things','twin','commands','modify','/features/Status/properties/status',headers, 'ALARM');}"
        }
    }
    
 }